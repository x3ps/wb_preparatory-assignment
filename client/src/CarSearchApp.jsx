import React, { useState } from "react";

export function CarSearchApp() {
  const [query, setQuery] = useState("");
  const [field, setField] = useState("brand");
  const [cars, setCars] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  const [hasSearched, setHasSearched] = useState(false);

  const searchCars = async () => {
    const trimmedQuery = query.trim();
    if (!trimmedQuery) return;

    setHasSearched(true);
    setLoading(true);
    setError("");
    setCars([]);

    const fetchUrl = `/api/search?q=${encodeURIComponent(trimmedQuery)}&field=${field}`;

    try {
      const res = await fetch(fetchUrl);

      if (!res.ok) {
        throw new Error((await res.text()) || `–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ${res.status}`);
      }

      let data = await res.json();

      if (!data) {
        data = [];
      }

      if (!Array.isArray(data)) {
        console.error("API response format error:", data);
        throw new Error(
          "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –û–∂–∏–¥–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤.",
        );
      }

      setCars(data);
    } catch (err) {
      setError(
        err.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.",
      );
      setCars([]);
    } finally {
      setLoading(false);
    }
  };

  const handleKeyDown = (e) => {
    if (e.key === "Enter" && query.trim() && !loading) {
      searchCars();
    }
  };

  return (
    <div className="app-container">
      <h1 className="md-headline">üîç –ü–æ–∏—Å–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π</h1>

      <div className="search-card">
        <div className="search-controls">
          <div className="md-select-container">
            <select
              value={field}
              onChange={(e) => setField(e.target.value)}
              className="md-select"
            >
              <option value="brand">–ú–∞—Ä–∫–∞</option>
              <option value="model">–ú–æ–¥–µ–ª—å</option>
            </select>
          </div>

          <div className="md-input-container">
            <input
              type="text"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å..."
              value={query}
              onChange={(e) => setQuery(e.target.value)}
              onKeyDown={handleKeyDown}
              className="md-input"
            />
            <label className="md-input-label">–ü–æ–∏—Å–∫</label>
          </div>
        </div>

        <button
          onClick={searchCars}
          className="md-button md-button-filled"
          // –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞, –µ—Å–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç
          disabled={loading || !query.trim()}
        >
          {loading ? "–ü–æ–∏—Å–∫..." : "–ò—Å–∫–∞—Ç—å"}
        </button>
      </div>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏: —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ 400, 500 –∏–ª–∏ –æ—à–∏–±–∫–µ —Å–µ—Ç–∏ */}
      {error && <p className="md-error-message">–û—à–∏–±–∫–∞: {error}</p>}

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
      {cars.length > 0 && (
        <div className="md-data-table-container">
          <table className="md-data-table">
            <thead>
              <tr>
                <th>–ú–∞—Ä–∫–∞</th>
                <th>–ú–æ–¥–µ–ª—å</th>
                <th>–ì–æ–¥</th>
                <th>–¶–µ–Ω–∞ (—Ç—ã—Å.‚ÇΩ)</th>
              </tr>
            </thead>
            <tbody>
              {cars.map((car, idx) => (
                <tr key={idx} className="md-table-row">
                  <td>{car.brand}</td>
                  <td>{car.model}</td>
                  <td>{car.year}</td>
                  <td>{car.price_thousands}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}

      {hasSearched && cars.length === 0 && !loading && !error && (
        <p className="md-info-message">
          –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏—Ö –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.
        </p>
      )}

      {!hasSearched && !loading && !error && (
        <p className="md-info-message">
          –í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –∏–ª–∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ø–æ–ª–µ –≤—ã—à–µ –∏ –Ω–∞–∂–º–∏—Ç–µ{" "}
          <b>–ò—Å–∫–∞—Ç—å</b> –∏–ª–∏ <b>Enter</b>, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—à–∏–Ω.
        </p>
      )}
    </div>
  );
}
